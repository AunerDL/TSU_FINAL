/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.mx.uttt.Vistas;

import edu.mx.uttt.VectoresMatrices.Matrices;
import javax.swing.JOptionPane;

/**
 *
 * @author angel
 */
public class Matricez extends javax.swing.JFrame {

     private Matrices ctrl;
     private Matrices ctrl2;
    
      public Matricez() {
        initComponents();
      
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtFilas = new javax.swing.JTextField();
        btnCrearMatriz = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtColumnas = new javax.swing.JTextField();
        btnMatrices = new javax.swing.JButton();
        btnSumar = new javax.swing.JButton();
        btnResta = new javax.swing.JButton();
        btnMultiplicar = new javax.swing.JButton();
        btnSumaDiagonal = new javax.swing.JButton();
        btnSumaInversa = new javax.swing.JButton();
        btnMediaAritmetica = new javax.swing.JButton();
        btnModa = new javax.swing.JButton();
        btnMediana = new javax.swing.JButton();
        btnOrdenarMatriz = new javax.swing.JButton();
        btnDesviacionEstandar = new javax.swing.JButton();
        btnTranspuesta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnCrearMatriz.setText("Crear");
        btnCrearMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearMatrizActionPerformed(evt);
            }
        });

        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane2.setViewportView(txtResultado);

        jLabel1.setText("Filas: ");

        jLabel2.setText("Columnas:");

        btnMatrices.setText("Mas matrices");
        btnMatrices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatricesActionPerformed(evt);
            }
        });

        btnSumar.setText("Sumar Matrices");
        btnSumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumarActionPerformed(evt);
            }
        });

        btnResta.setText("Restar Matrices");
        btnResta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaActionPerformed(evt);
            }
        });

        btnMultiplicar.setText("Multiplicar Matrices");
        btnMultiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplicarActionPerformed(evt);
            }
        });

        btnSumaDiagonal.setText("Suma diagonal");
        btnSumaDiagonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumaDiagonalActionPerformed(evt);
            }
        });

        btnSumaInversa.setText("Suma diagonal Inversa");
        btnSumaInversa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumaInversaActionPerformed(evt);
            }
        });

        btnMediaAritmetica.setText("Media Aritmetica");
        btnMediaAritmetica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMediaAritmeticaActionPerformed(evt);
            }
        });

        btnModa.setText("Moda");
        btnModa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModaActionPerformed(evt);
            }
        });

        btnMediana.setText("Mediana");
        btnMediana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedianaActionPerformed(evt);
            }
        });

        btnOrdenarMatriz.setText("Ordenar");
        btnOrdenarMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarMatrizActionPerformed(evt);
            }
        });

        btnDesviacionEstandar.setText("Desviacion Estandar");
        btnDesviacionEstandar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesviacionEstandarActionPerformed(evt);
            }
        });

        btnTranspuesta.setText("Transpuesta de la matriz");
        btnTranspuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTranspuestaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtFilas)
                                    .addComponent(txtColumnas, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnCrearMatriz, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                    .addComponent(btnOrdenarMatriz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnMediana, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDesviacionEstandar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnResta, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMultiplicar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSumaDiagonal, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSumar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnModa, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSumaInversa, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTranspuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnMediaAritmetica, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMatrices, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFilas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCrearMatriz)
                    .addComponent(btnMediaAritmetica)
                    .addComponent(btnMediana)
                    .addComponent(btnMatrices))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtColumnas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSumar)
                    .addComponent(btnOrdenarMatriz)
                    .addComponent(btnModa)
                    .addComponent(btnDesviacionEstandar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnResta)
                    .addComponent(btnMultiplicar)
                    .addComponent(btnSumaDiagonal)
                    .addComponent(btnSumaInversa)
                    .addComponent(btnTranspuesta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearMatrizActionPerformed
      int filas = Integer.parseInt(txtFilas.getText());
        int columnas = Integer.parseInt(txtColumnas.getText());

        ctrl = new Matrices(filas, columnas);

        int[][] datos = new int[filas][columnas];

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                datos[i][j] = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el elemento en la posición [" + i + "][" + j + "]:"));
            }
        }

        ctrl.llenarMatriz(datos);

        int[][] matrizResultado = ctrl.obtenerMatriz();

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                sb.append(matrizResultado[i][j]).append("\t");
            }
            sb.append("\n");
        }
        txtResultado.setText(sb.toString());
    
    }//GEN-LAST:event_btnCrearMatrizActionPerformed

    private void btnMatricesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatricesActionPerformed
       int filas1 = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el número de filas de la primera matriz:"));
        int columnas1 = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el número de columnas de la primera matriz:"));

        int filas2 = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el número de filas de la segunda matriz:"));
        int columnas2 = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el número de columnas de la segunda matriz:"));

        if (columnas1 != filas2) {
            JOptionPane.showMessageDialog(this, "El número de columnas de la primera matriz debe ser igual al número de filas de la segunda matriz.");
            return;
        }

        ctrl = new Matrices(filas1, columnas1);
        ctrl2 = new Matrices(filas2, columnas2);

        int[][] datos1 = new int[filas1][columnas1];
        int[][] datos2 = new int[filas2][columnas2];

        for (int i = 0; i < filas1; i++) {
            for (int j = 0; j < columnas1; j++) {
                datos1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el elemento de la primera matriz en la posición [" + i + "][" + j + "]:"));
            }
        }

        for (int i = 0; i < filas2; i++) {
            for (int j = 0; j < columnas2; j++) {
                datos2[i][j] = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el elemento de la segunda matriz en la posición [" + i + "][" + j + "]:"));
            }
        }

        ctrl.llenarMatriz(datos1);
        ctrl2.llenarMatriz(datos2);
    
    }//GEN-LAST:event_btnMatricesActionPerformed

    private void btnSumarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumarActionPerformed
        ctrl.sumar(ctrl2);

        int filas = ctrl.getFilas();
        int columnas = ctrl.getColumnas();

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                sb.append(ctrl.obtenerElemento(i, j)).append("\t");
            }
            sb.append("\n");
        }
        txtResultado.setText("Resultado de Suma:" + sb.toString());
    }//GEN-LAST:event_btnSumarActionPerformed

    private void btnRestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaActionPerformed
         ctrl.restar(ctrl2);

        int filas = ctrl.getFilas();
        int columnas = ctrl.getColumnas();

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                sb.append(ctrl.obtenerElemento(i, j)).append("\t");
            }
            sb.append("\n");
        }
        txtResultado.setText("Resultado de Resta:" + sb.toString());
    }//GEN-LAST:event_btnRestaActionPerformed

    private void btnMultiplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplicarActionPerformed
         if (ctrl.getColumnas() != ctrl2.getFilas()) {
            JOptionPane.showMessageDialog(this, "El número de columnas de la primera matriz debe ser igual al número de filas de la segunda matriz para multiplicarlas.");
            return;
        }

        ctrl.multiplicar(ctrl2);

        int filas = ctrl.getFilas();
        int columnas = ctrl.getColumnas();

        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                sb.append(ctrl.obtenerElemento(i, j)).append("\t");
            }
            sb.append("\n");
        }
        
        txtResultado.setText("Resultado de Multiplicacion:" + sb.toString());
    
    }//GEN-LAST:event_btnMultiplicarActionPerformed

    private void btnSumaDiagonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumaDiagonalActionPerformed
          int sumaDiagonal = ctrl.sumaDiagonal();

        if (sumaDiagonal >= 0) {
            txtResultado.setText("Resultado de Suma diagonal:" + Integer.toString(sumaDiagonal));
        } else {
            txtResultado.setText("La matriz no es cuadrada.");
        }
    
    }//GEN-LAST:event_btnSumaDiagonalActionPerformed

    private void btnSumaInversaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumaInversaActionPerformed
         int sumaDiagonalInversa = ctrl.sumaDiagonalInversa();

        if (sumaDiagonalInversa >= 0) {
            txtResultado.setText("Resultado de Suma diagonal inversa: " + Integer.toString(sumaDiagonalInversa));
        } else {
            txtResultado.setText("La matriz no es cuadrada.");
        }
    }//GEN-LAST:event_btnSumaInversaActionPerformed

    private void btnMediaAritmeticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMediaAritmeticaActionPerformed
        double mediaAritmetica = ctrl.calcularMediaAritmetica();
        txtResultado.setText("Resultado de la media aritmetica: " + Double.toString(mediaAritmetica));
    }//GEN-LAST:event_btnMediaAritmeticaActionPerformed

    private void btnModaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModaActionPerformed
         int moda = ctrl.calcularModa();
        if (moda == -1) {
            txtResultado.setText("No hay moda en la matriz.");
        } else {
            txtResultado.setText("La moda es: " + Integer.toString(moda));
        }
    }//GEN-LAST:event_btnModaActionPerformed

    private void btnMedianaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedianaActionPerformed
           double mediana = ctrl.calcularMediana();
           txtResultado.setText("Resultado de Mediana: " + Double.toString(mediana));
    }//GEN-LAST:event_btnMedianaActionPerformed

    private void btnOrdenarMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarMatrizActionPerformed
         ctrl.ordenarMatriz();
         txtResultado.setText("Se ordeno matriz con exito!!");
    }//GEN-LAST:event_btnOrdenarMatrizActionPerformed

    private void btnDesviacionEstandarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesviacionEstandarActionPerformed
        double desviacionEstandar = ctrl.calcularDesviacionEstandar();
        txtResultado.setText("Resultado de desviacion estandar: " + Double.toString(desviacionEstandar));
    }//GEN-LAST:event_btnDesviacionEstandarActionPerformed

    private void btnTranspuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTranspuestaActionPerformed
        int[][] matrizTranspuesta = ctrl.obtenerMatriz();
        txtResultado.setText(ctrl.MatrizTranspuesta(matrizTranspuesta).toString());       
  
    }//GEN-LAST:event_btnTranspuestaActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearMatriz;
    private javax.swing.JButton btnDesviacionEstandar;
    private javax.swing.JButton btnMatrices;
    private javax.swing.JButton btnMediaAritmetica;
    private javax.swing.JButton btnMediana;
    private javax.swing.JButton btnModa;
    private javax.swing.JButton btnMultiplicar;
    private javax.swing.JButton btnOrdenarMatriz;
    private javax.swing.JButton btnResta;
    private javax.swing.JButton btnSumaDiagonal;
    private javax.swing.JButton btnSumaInversa;
    private javax.swing.JButton btnSumar;
    private javax.swing.JButton btnTranspuesta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtColumnas;
    private javax.swing.JTextField txtFilas;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables

    private String Integer(int[][] transpuesta) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
